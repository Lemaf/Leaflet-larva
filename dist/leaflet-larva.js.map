{"version":3,"sources":["L.larva.js","package.js","Path.js","Polyline.js","../frame/package.js","../frame/Path.js","../ext/L.Polyline.js","../frame/Style.js","Polyline.Move.js"],"names":["L","larva","version","getHeight","el","offsetHeight","getWidth","offsetWidth","handler","Path","Handler","extend","includes","Evented","prototype","initialize","path","frameStyle","options","setOptions","_path","_frameStyle","addInitHook","Polyline","frame","Layer","statics","TOP_LEFT","TOP_MIDDLE","TOP_RIGHT","MIDDLE_LEFT","MIDDLE_MIDDLE","MIDDLE_RIGHT","BOTTOM_LEFT","BOTTOM_MIDDLE","BOTTOM_RIGHT","pane","_pathFrame","beforeAdd","map","getPane","createPane","getEvents","zoom","_updateFrame","getDraggable","_draggable","getPosition","DomUtil","_el","hideHandle","i","arguments","length","_elements","style","display","onAdd","create","DomEvent","on","stop","forEach","id","_draggables","Draggable","_updateHandles","onRemove","disable","off","remove","empty","setStyle","oldStyle","_style","removeClass","className","addClass","hide","draggable","enable","_updateDraggable","left","offsetLeft","top","offsetTop","marginLeft","parseInt","marginTop","setPosition","point","bounds","getBounds","southEastPoint","_map","latLngToLayerPoint","getSouthEast","northWestPoint","getNorthWest","computedStyle","getComputedStyle","x","borderLeftWidth","borderRightWidth","y","borderTopWidth","borderBottomWidth","width","height","right","bottom","widthOf","heightOf","borderWidth","br","bm","bl","mm","ml","mr","tr","tm","tl","pathFrame","pathframe","forEachLatLng","include","fn","context","latlngs","getLatLngs","Array","isArray","reduce","array","concat","Style","Move","Resize","Rotate","addHooks","_frame","addTo","_onDrag","offset","subtract","_layerProjectedPoint","projected","newLatLng","latlng","_original","layerPointToLatLng","add","lat","lng","setLatLngs","_onDragEnd","_onDragStart","clone","move"],"mappings":"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","file":"leaflet-larva.js","sourcesContent":["L.larva = {\n\tversion: '0.1.0',\n\n\tgetHeight: function (el) {\n\t\treturn el.offsetHeight;\n\t},\n\n\tgetWidth: function (el) {\n\t\treturn el.offsetWidth;\n\t}\n};","L.larva.handler = {\n\n};","/**\n * @requires package.js\n * \n * Base class for Path handlers\n */\nL.larva.handler.Path = L.Handler.extend({\n\n\tincludes: [L.Evented.prototype],\n\n\tinitialize: function (path, frameStyle, options) {\n\t\tL.setOptions(this, options);\n\n\t\tthis._path = path;\n\t\tthis._frameStyle = frameStyle;\n\t}\n\n});\n\nL.Path.addInitHook(function () {\n\tthis.larva = {};\n});","/**\n * @requires Path.js\n */\nL.larva.handler.Polyline = L.larva.handler.Path.extend({\n\n\toptions: {\n\t\t\n\t}\n\n});","L.larva.frame = {\n\n};","/**\n * @requires package.js\n */\nL.larva.frame.Path = L.Layer.extend({\n\n\tstatics: {\n\t\tTOP_LEFT: 'tl',\n\t\tTOP_MIDDLE: 'tm',\n\t\tTOP_RIGHT: 'tl',\n\t\tMIDDLE_LEFT: 'ml',\n\t\tMIDDLE_MIDDLE: 'mm',\n\t\tMIDDLE_RIGHT: 'mr',\n\t\tBOTTOM_LEFT: 'bl',\n\t\tBOTTOM_MIDDLE: 'bm',\n\t\tBOTTOM_RIGHT: 'br'\n\t},\n\n\toptions: {\n\t\tpane: 'llarvaPathframe'\n\t},\n\n\tinitialize: function (path) {\n\t\tif (path._pathFrame && path._pathFrame instanceof L.larva.frame.Path) {\n\t\t\treturn path._pathFrame;\n\t\t}\n\n\t\tpath._pathFrame = this;\n\t\tthis._path = path;\n\t},\n\n\tbeforeAdd: function (map) {\n\t\tif (!map.getPane(this.options.pane)) {\n\t\t\tmap.createPane(this.options.pane);\n\t\t}\n\t},\n\n\tgetEvents: function () {\n\t\treturn {\n\t\t\tzoom: this._updateFrame\n\t\t};\n\t},\n\n\tgetDraggable: function () {\n\t\treturn this._draggable;\n\t},\n\n\tgetPosition: function() {\n\t\treturn L.DomUtil.getPosition(this._el);\n\t},\n\n\thideHandle: function() {\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tif (this._elements[arguments[i]]) {\n\t\t\t\tthis._elements[arguments[i]].style.display = 'none';\n\t\t\t}\n\t\t}\n\t},\n\n\tonAdd: function () {\n\t\tvar el = this._el = L.DomUtil.create('div', 'llarva-pathframe', this.getPane());\n\t\tL.DomEvent.on(el, 'mousedown', L.DomEvent.stop);\n\n\t\tthis._elements = {};\n\n\t\t['tl','tm','tr','ml','mm','mr','bl','bm','br'].forEach(function (id) {\n\n\t\t\tthis._elements[id] = L.DomUtil.create('div', 'llarva-pathframe-' + id + \" \" + id, el);\n\t\t\tL.DomEvent.on(this._elements[id], 'mousedown click', L.DomEvent.stop);\n\n\t\t}, this);\n\n\t\tthis._draggables = {};\n\n\t\tthis._draggable = new L.Draggable(el);\n\n\t\tthis._updateFrame();\n\n\t\tthis._updateHandles();\n\t},\n\n\tonRemove: function() {\n\t\tif (this._draggable) {\n\t\t\tthis._draggable.disable();\n\t\t}\n\n\t\tL.DomEvent.off(this._el, 'mousedown', L.DomEvent.stop);\n\n\t\tfor (var id in this._elements) {\n\t\t\tL.DomEvent.off(this._elements[id], 'mousedown click', L.DomEvent.stop);\n\t\t}\n\n\t\tL.DomUtil.remove(this._el);\n\t\tL.DomUtil.empty(this._el);\n\n\t\tdelete this._el;\n\t},\n\n\tsetStyle: function (style) {\n\t\tvar id, el, oldStyle = this._style;\n\n\t\tfor (id in this._elements) {\n\t\t\tel = this._elements[id];\n\t\t\tel.style.display = 'block';\n\n\t\t\tif (this._draggables[id]) {\n\t\t\t\tthis._draggables[id].disable();\n\t\t\t\tdelete this._draggables[id];\n\t\t\t}\n\n\t\t\tif (oldStyle) {\n\t\t\t\tL.DomUtil.removeClass(el, oldStyle.className + '-' + id);\n\t\t\t}\n\n\t\t\tL.DomUtil.addClass(el, style.className + '-' + id);\n\n\t\t\tif (style[id]) {\n\t\t\t\tif (style[id].hide) {\n\t\t\t\t\tel.style.display = 'none';\n\t\t\t\t}\n\n\t\t\t\tif (style[id].draggable) {\n\t\t\t\t\tthis._draggables[id] = new L.Draggable(el);\n\t\t\t\t\tthis._draggables[id].enable();\n\t\t\t\t\tL.DomEvent.off(el, 'mousedown click', L.DomEvent.stop);\n\n\t\t\t\t\tthis._updateDraggable(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (oldStyle) {\n\t\t\tL.DomUtil.removeClass(this._el, oldStyle.className);\n\t\t}\n\n\t\tL.DomUtil.addClass(this._el, style.className);\n\n\t\tthis._style = style;\n\t},\n\n\t_updateDraggable: function (id) {\n\t\tvar el = this._elements[id];\n\t\tvar left = el.offsetLeft,\n\t\ttop = el.offsetTop;\n\n\t\tif (el.style.marginLeft) {\n\t\t\tleft -= parseInt(el.style.marginLeft);\n\t\t}\n\n\t\tif (el.style.marginTop) {\n\t\t\ttop -= parseInt(el.style.marginTop);\n\t\t}\n\n\t\tL.extend(el.style, {\n\t\t\tleft: '0px', top: '0px'\n\t\t});\n\n\t\tL.DomUtil.setPosition(el, L.point(left, top));\n\t},\n\n\t_updateFrame: function () {\n\t\tvar bounds = this._path.getBounds();\n\n\t\tvar southEastPoint = this._map.latLngToLayerPoint(bounds.getSouthEast()),\n\t\tnorthWestPoint = this._map.latLngToLayerPoint(bounds.getNorthWest());\n\n\t\tvar computedStyle = getComputedStyle(this._el);\n\n\t\tL.DomUtil.setPosition(this._el, northWestPoint);\n\n\n\t\tvar x = parseInt(computedStyle.borderLeftWidth) + parseInt(computedStyle.borderRightWidth),\n\t\ty = parseInt(computedStyle.borderTopWidth) + parseInt(computedStyle.borderBottomWidth);\n\n\t\tthis._el.style.width = (southEastPoint.x - northWestPoint.x - x) + 'px';\n\t\tthis._el.style.height = (southEastPoint.y - northWestPoint.y - y) + 'px';\n\n\t\tthis.southEastPoint = southEastPoint;\n\t\tthis.northWestPoint = northWestPoint;\n\t},\n\n\t_updateHandles: function () {\n\t\tvar el, computedStyle, right, bottom, left, top;\n\t\tvar widthOf = L.larva.getWidth, heightOf = L.larva.getHeight;\n\n\t\tcomputedStyle = getComputedStyle(this._el);\n\n\t\tvar borderWidth = {\n\t\t\tbottom: 'borderBottomWidth',\n\t\t\tleft: 'borderLeftWidth',\n\t\t\tright: 'borderRightWidth',\n\t\t\ttop: 'borderTopWidth'\n\t\t};\n\n\t\tfor (var id in borderWidth) {\n\t\t\tborderWidth[id] = parseInt(computedStyle[borderWidth[id]]) / 2;\n\t\t}\n\n\t\tel = this._elements.br;\n\n\t\tright = (- (widthOf(el) / 2) - borderWidth.right) + 'px';\n\t\tbottom = (- (heightOf(el) / 2) - borderWidth.bottom) + 'px';\n\n\t\tL.extend(el.style, {\n\t\t\tright: right,\n\t\t\tbottom: bottom\n\t\t});\n\n\t\tel = this._elements.bm;\n\t\tleft = (-(widthOf(el) / 2)) + 'px';\n\t\tbottom = (- (heightOf(el) / 2) - borderWidth.bottom) + 'px';\n\n\t\tL.extend(el.style, {\n\t\t\tleft: '50%',\n\t\t\t'margin-left': left,\n\t\t\tbottom: bottom\n\t\t});\n\n\t\tel = this._elements.bl;\n\t\tleft = (-(widthOf(el) / 2) - borderWidth.left) + 'px';\n\t\tbottom = (- (heightOf(el) / 2) - borderWidth.bottom) + 'px';\n\t\tL.extend(el.style, {\n\t\t\tleft: left,\n\t\t\tbottom: bottom\n\t\t});\n\n\t\tel = this._elements.mm;\n\t\tleft = -(widthOf(el) / 2) + 'px';\n\t\ttop = -(heightOf(el) / 2) + 'px';\n\t\tL.extend(el.style, {\n\t\t\ttop: '50%',\n\t\t\tleft: '50%',\n\t\t\t'margin-left': left,\n\t\t\t'margin-top': top\n\t\t});\n\n\t\tel = this._elements.ml;\n\t\ttop = -(heightOf(el) / 2) + 'px';\n\t\tleft = (-(widthOf(el) / 2) - borderWidth.left) + 'px';\n\t\tL.extend(el.style, {\n\t\t\ttop: '50%',\n\t\t\t'margin-top': top,\n\t\t\tleft: left\n\t\t});\n\n\t\tel = this._elements.mr;\n\t\tright = (- (widthOf(el) / 2) - borderWidth.right) + 'px';\n\t\ttop = -(heightOf(el) / 2) + 'px';\n\t\tL.extend(el.style, {\n\t\t\tright: right,\n\t\t\ttop: '50%',\n\t\t\t'margin-top': top\n\t\t});\n\n\t\tel = this._elements.tr;\n\t\tright = (-(widthOf(el) / 2) - borderWidth.right) + 'px';\n\t\ttop = (-(heightOf(el) / 2) - borderWidth.top) + 'px';\n\t\tL.extend(el.style, {\n\t\t\tright: right,\n\t\t\ttop: top\n\t\t});\n\n\t\tel = this._elements.tm;\n\t\ttop = (-(heightOf(el) / 2) - borderWidth.top) + 'px';\n\t\tleft = -(widthOf(el) / 2) + 'px';\n\t\tL.extend(el.style, {\n\t\t\tleft: '50%',\n\t\t\t'margin-left': left,\n\t\t\ttop: top\n\t\t});\n\n\t\tel = this._elements.tl;\n\t\ttop = (-(heightOf(el) / 2) - borderWidth.top) + 'px';\n\t\tleft = (-(widthOf(el) / 2) - borderWidth.left) + 'px';\n\t\tL.extend(el.style, {\n\t\t\tleft: left,\n\t\t\ttop: top\n\t\t});\n\t}\n});\n\nL.larva.pathFrame = function pathframe (path) {\n\treturn new L.larva.frame.Path(path);\n};","if (!L.Polyline.prototype.forEachLatLng) {\n\tL.Polyline.include({\n\n\t\tforEachLatLng: function (fn, context) {\n\t\t\tvar latlngs = this.getLatLngs();\n\n\t\t\tif (!latlngs.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Array.isArray(latlngs[0])) {\n\t\t\t\t// nested array\n\n\t\t\t\tlatlngs = latlngs.reduce(function (array, latlngs) {\n\t\t\t\t\treturn array.concat(latlngs);\n\t\t\t\t}, []);\n\t\t\t}\n\n\t\t\tlatlngs.forEach(fn, context);\n\t\t}\n\n\t});\n}","/**\n * @requires package.js\n */\n\nL.larva.frame.Style = {\n\t\n};\n\nL.larva.frame.Style.Move = {\n\tclassName: 'llarva-pathframe-move',\n\t\n\ttl: {\n\t\thide: true\n\t},\n\n\ttr: {\n\t\thide: true\n\t},\n\n\tmm: {\n\t\thide: true\n\t},\n\n\tbl: {\n\t\thide: true\n\t},\n\n\tbr: {\n\t\thide: true\n\t}\n};\n\nL.larva.frame.Style.Resize = {\n\tclassName: 'llarva-pathframe-resize',\n\tmm: {\n\t\thide: true\n\t}\n};\n\nL.larva.frame.Style.Rotate = {\n\tclassName: 'llarva-pathframe-rotate',\n\tmm: {\n\t\tdraggable: true\n\t}\n};","/**\n * @requires Polyline.js\n * @requires ../frame/Path.js\n * @requires ../ext/L.Polyline.js\n * @requires ../frame/Style.js\n * \n * @type {[type]}\n */\nL.larva.handler.Polyline.Move = L.larva.handler.Polyline.extend({\n\n\taddHooks: function() {\n\t\tthis._frame = L.larva.pathFrame(this._path).addTo(this._path._map);\n\n\t\tthis._frame.setStyle(this._frameStyle);\n\t\t// this._draggable = this._frame.getDraggable();\n\n\t\t// this._draggable.on({\n\t\t// \tdrag: this._onDrag,\n\t\t// \tdragstart: this._onDragStart,\n\t\t// \tdragend: this._onDragEnd,\n\t\t// }, this);\n\n\t\t// this._draggable.enable();\n\t},\n\n\t_onDrag: function () {\n\t\tvar map = this._path._map;\n\t\tvar offset = this._frame.getPosition().subtract(this._layerProjectedPoint);\n\t\tvar projected, newLatLng;\n\n\t\tthis._path.forEachLatLng(function (latlng) {\n\n\t\t\tprojected = map.latLngToLayerPoint(latlng._original);\n\t\t\tnewLatLng = map.layerPointToLatLng(projected.add(offset));\n\t\t\tlatlng.lat = newLatLng.lat;\n\t\t\tlatlng.lng = newLatLng.lng;\n\t\t});\n\n\t\tthis._path.setLatLngs(this._path.getLatLngs());\n\t},\n\n\t_onDragEnd: function () {\n\n\t},\n\n\t_onDragStart: function () {\n\t\tthis._layerProjectedPoint = this._path._map.latLngToLayerPoint(this._path.getBounds().getNorthWest());\n\t\tthis._path.forEachLatLng(function (latlng) {\n\t\t\tlatlng._original = latlng.clone();\n\t\t});\n\t}\n\n});\n\nL.Polyline.addInitHook(function () {\n\tthis.larva.move = new L.larva.handler.Polyline.Move(this, L.larva.frame.Style.Move);\n});"],"sourceRoot":"/source/"}